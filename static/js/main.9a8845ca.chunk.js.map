{"version":3,"sources":["components/Name.js","components/WindowSize.js","components/Canvas.js","components/ColorPicker.js","components/RefreshButton.js","components/Paint.js","Playground.js","reportWebVitals.js","index.js"],"names":["React","memo","useState","name","setName","className","value","onChange","e","target","onClick","setSelectionRange","length","placeholder","useWindowSize","cb","window","innerWidth","innerHeight","windowWidth","windowHeight","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","Canvas","props","drawing","setDrawing","width","setWidth","height","setHeight","canvasRef","useRef","ctx","current","getContext","stopDrawing","closePath","ref","onMouseDown","lineJoin","lineCap","lineWidth","strokeStyle","color","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","onMouseUp","onMouseOut","onMouseMove","coords","lineTo","stroke","handleMouseMove","ColorPicker","colors","activeColor","setActiveColor","map","i","type","checked","style","background","Paint","setColors","getColors","useCallback","baseColor","randomColor","slice","fetch","then","res","json","hex","visible","setVisible","timeoutId","clearTimeout","setTimeout","borderTop","Name","marginTop","RefreshButton","Playground","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAEeA,MAAMC,MAAK,WAAO,IAAD,EACNC,mBAAS,IADH,mBACvBC,EADuB,KACjBC,EADiB,KAE9B,OACE,uBAAOC,UAAU,cAAjB,SACE,uBACEC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOH,QAClCI,QAAS,SAACF,GAAD,OAAOA,EAAEC,OAAOE,kBAAkB,EAAGH,EAAEC,OAAOH,MAAMM,SAC7DC,YAAY,kBCRL,SAASC,EAAcC,GAAK,IAAD,EACab,mBAAS,CAC5Dc,OAAOC,WACPD,OAAOE,cAH+B,yCAChCC,EADgC,KACnBC,EADmB,KACJC,EADI,KAcxC,OARAC,qBAAU,WACR,IAAMC,EAAe,WACnBR,IACAM,EAAc,CAACL,OAAOC,WAAYD,OAAOE,eAG3C,OADAF,OAAOQ,iBAAiB,SAAUD,GAC3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IACI,CAACJ,EAAaC,GCbR,SAASM,EAAOC,GAAQ,IAAD,EACNzB,oBAAS,GADH,mBAC7B0B,EAD6B,KACpBC,EADoB,OAEV3B,mBAASc,OAAOC,YAFN,mBAE7Ba,EAF6B,KAEtBC,EAFsB,OAGR7B,mBAASc,OAAOE,aAHR,mBAG7Bc,EAH6B,KAGrBC,EAHqB,KAK9BC,EAAYC,mBACZC,EAAMD,mBAEZb,qBAAU,WACRc,EAAIC,QAAUH,EAAUG,QAAQC,WAAW,QAC1C,IAViC,MAYAxB,GAAc,WAChDiB,EAASf,OAAOC,YAChBgB,EAAUjB,OAAOE,gBAdiB,6BA4CpC,SAASqB,IACPH,EAAIC,QAAQG,YACZX,GAAW,GAGb,OACE,wBACEY,IAAKP,EACLJ,MAAOH,EAAMG,OAASA,EACtBE,OAAQL,EAAMK,QAAUA,EACxBU,YAvBJ,SAAsBlC,GACpB4B,EAAIC,QAAQM,SAAW,QACvBP,EAAIC,QAAQO,QAAU,QACtBR,EAAIC,QAAQQ,UAAY,GACxBT,EAAIC,QAAQS,YAAcnB,EAAMoB,MAChCX,EAAIC,QAAQW,YAEZZ,EAAIC,QAAQY,OACVzC,EAAE0C,QAAUhB,EAAUG,QAAQc,WAC9B3C,EAAE4C,QAAUlB,EAAUG,QAAQgB,WAEhCxB,GAAW,IAaTyB,UAAWf,EACXgB,WAAYhB,EACZiB,YAxCJ,SAAyBhD,GAEvB,IAIa,EAJPiD,EAAS,CACbjD,EAAE0C,QAAUhB,EAAUG,QAAQc,WAC9B3C,EAAE4C,QAAUlB,EAAUG,QAAQgB,WAE5BzB,KACF,EAAAQ,EAAIC,SAAQqB,OAAZ,QAAsBD,GACtBrB,EAAIC,QAAQsB,UAEVhC,EAAMiC,iBACRjC,EAAMiC,gBAAN,MAAAjC,EAAyB8B,M,oBC5BhB,SAASI,EAAT,GAIX,IAAD,IAHDC,cAGC,MAHQ,GAGR,EAFDC,EAEC,EAFDA,YACAC,EACC,EADDA,eAEA,OAAKF,EAAOlD,OAEV,0BAAUP,UAAU,eAApB,SACGyD,EAAOG,KAAI,SAAClB,EAAOmB,GAAR,OACV,kCACE,uBACE/D,KAAK,QACLgE,KAAK,QACL7D,MAAOyC,EACPqB,QAASL,IAAgBhB,EACzBxC,SAAU,kBAAMyD,EAAejB,MAEjC,sBAAMsB,MAAO,CAAEC,WAAYvB,OARjBmB,QAJS,KCNdlE,UAAMC,MAAK,YAAa,IAAVc,EAAS,EAATA,GAC3B,OACE,wBAAQV,UAAU,wBAAwBK,QAASK,EAAnD,uBCIW,SAASwD,IAAS,IAAD,EACFrE,mBAAS,IADP,mBACvB4D,EADuB,KACfU,EADe,OAEQtE,mBAAS,MAFjB,mBAEvB6D,EAFuB,KAEVC,EAFU,KAGxBS,EAAYC,uBAAY,WAC5B,IAAMC,EAAYC,MAAcC,MAAM,GACtCC,MAAM,0CAAD,OAA2CH,EAA3C,qBACFI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLR,EAAUQ,EAAIlB,OAAOG,KAAI,SAAClB,GAAD,OAAWA,EAAMmC,IAAI5E,UAC9C0D,EAAegB,EAAIlB,OAAO,GAAGoB,IAAI5E,YAEpC,IACHgB,oBAAUmD,EAAW,IAZS,MAcAvE,oBAAS,GAdT,mBAcvBiF,EAduB,KAcdC,EAdc,KAe1BC,EAAYlD,mBAfc,EAgBMrB,GAAc,WAChDsE,GAAW,GACXE,aAAaD,EAAUhD,SACvBgD,EAAUhD,QAAUkD,YAAW,kBAAMH,GAAW,KAAQ,QAnB5B,mBAgBvBjE,EAhBuB,KAgBVC,EAhBU,KAsB9B,OACE,sBAAKf,UAAU,MAAf,UACE,yBAAQgE,MAAO,CAAEmB,UAAU,cAAD,OAAgBzB,IAA1C,UACE,8BACE,cAAC0B,EAAD,MAEF,sBAAKpB,MAAO,CAAEqB,UAAW,IAAzB,UACE,cAAC7B,EAAD,CACEC,OAAQA,EACRC,YAAaA,EACbC,eAAgBA,IAElB,cAAC2B,EAAD,CAAe5E,GAAI0D,UAGtBV,GACC,cAACrC,EAAD,CAAQqB,MAAOgB,EAAa/B,OAAQhB,OAAOE,cAE7C,sBAAKb,UAAS,sBAAiB8E,EAAU,GAAK,UAA9C,UACGhE,EADH,MACmBC,QC1CVwE,MAJf,WACE,OAAO,cAACrB,EAAD,KCQMsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.9a8845ca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default React.memo(() => {\n  const [name, setName] = useState(\"\");\n  return (\n    <label className=\"header-name\">\n      <input\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        onClick={(e) => e.target.setSelectionRange(0, e.target.value.length)}\n        placeholder=\"Untitled\"\n      />\n    </label>\n  );\n});\n","import React, { useState, useEffect } from \"react\";\n\nexport default function useWindowSize(cb) {\n  const [[windowWidth, windowHeight], setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      cb();\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return [windowWidth, windowHeight];\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport useWindowSize from \"./WindowSize\";\n\nexport default function Canvas(props) {\n  const [drawing, setDrawing] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  const canvasRef = useRef();\n  const ctx = useRef();\n\n  useEffect(() => {\n    ctx.current = canvasRef.current.getContext(\"2d\");\n  }, []);\n\n  const [windowWidth, windowHeight] = useWindowSize(() => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  });\n\n  function handleMouseMove(e) {\n    // actual coordinates\n    const coords = [\n      e.clientX - canvasRef.current.offsetLeft,\n      e.clientY - canvasRef.current.offsetTop,\n    ];\n    if (drawing) {\n      ctx.current.lineTo(...coords);\n      ctx.current.stroke();\n    }\n    if (props.handleMouseMove) {\n      props.handleMouseMove(...coords);\n    }\n  }\n  function startDrawing(e) {\n    ctx.current.lineJoin = \"round\";\n    ctx.current.lineCap = \"round\";\n    ctx.current.lineWidth = 10;\n    ctx.current.strokeStyle = props.color;\n    ctx.current.beginPath();\n    // actual coordinates\n    ctx.current.moveTo(\n      e.clientX - canvasRef.current.offsetLeft,\n      e.clientY - canvasRef.current.offsetTop\n    );\n    setDrawing(true);\n  }\n  function stopDrawing() {\n    ctx.current.closePath();\n    setDrawing(false);\n  }\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={props.width || width}\n      height={props.height || height}\n      onMouseDown={startDrawing}\n      onMouseUp={stopDrawing}\n      onMouseOut={stopDrawing}\n      onMouseMove={handleMouseMove}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport randomColor from \"randomcolor\";\n\nexport default function ColorPicker({\n  colors = [],\n  activeColor,\n  setActiveColor,\n}) {\n  if (!colors.length) return null;\n  return (\n    <fieldset className=\"color-picker\">\n      {colors.map((color, i) => (\n        <label key={i}>\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value={color}\n            checked={activeColor === color}\n            onChange={() => setActiveColor(color)}\n          />\n          <span style={{ background: color }} />\n        </label>\n      ))}\n    </fieldset>\n  );\n}\n","import React from \"react\";\n\nexport default React.memo(({ cb }) => {\n  return (\n    <button className=\"button-refresh-colors\" onClick={cb}>\n      &#8634;\n    </button>\n  );\n});\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport Name from \"./Name\";\nimport Canvas from \"./Canvas\";\nimport ColorPicker from \"./ColorPicker\";\nimport RefreshButton from \"./RefreshButton\";\nimport useWindowSize from \"./WindowSize\";\nimport randomColor from \"randomcolor\";\n\nexport default function Paint() {\n  const [colors, setColors] = useState([]);\n  const [activeColor, setActiveColor] = useState(null);\n  const getColors = useCallback(() => {\n    const baseColor = randomColor().slice(1);\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`)\n      .then((res) => res.json())\n      .then((res) => {\n        setColors(res.colors.map((color) => color.hex.value));\n        setActiveColor(res.colors[0].hex.value);\n      });\n  }, []);\n  useEffect(getColors, []);\n\n  const [visible, setVisible] = useState(false);\n  let timeoutId = useRef();\n  const [windowWidth, windowHeight] = useWindowSize(() => {\n    setVisible(true);\n    clearTimeout(timeoutId.current);\n    timeoutId.current = setTimeout(() => setVisible(false), 500);\n  });\n\n  return (\n    <div className=\"app\">\n      <header style={{ borderTop: `10px solid ${activeColor}` }}>\n        <div>\n          <Name />\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <ColorPicker\n            colors={colors}\n            activeColor={activeColor}\n            setActiveColor={setActiveColor}\n          />\n          <RefreshButton cb={getColors} />\n        </div>\n      </header>\n      {activeColor && (\n        <Canvas color={activeColor} height={window.innerHeight} />\n      )}\n      <div className={`window-size ${visible ? \"\" : \"hidden\"}`}>\n        {windowWidth} x {windowHeight}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Paint from \"./components/Paint\";\n\nfunction Playground() {\n  return <Paint />;\n}\n\nexport default Playground;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Playground from \"./Playground\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Playground />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}